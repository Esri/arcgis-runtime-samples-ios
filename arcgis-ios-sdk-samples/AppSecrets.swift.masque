// Copyright 2020 Esri
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation

extension String {
    /// The App's public client ID. The client ID is used by OAuth to authenticate a user.
    ///
    /// - Note: Change this to reflect your organization's client ID.
    ///         The client ID can be found in the **Credentials** section of
    ///         the **Authentication** tab within the [Dashboard of the ArcGIS for Developers](https://developers.arcgis.com/applications) site.
    static let clientID: String = {
        let clientID = "{{ ARCGIS_CLIENT_ID }}"
        guard !clientID.isEmpty else {
            fatalError(".secrets must contain ARCGIS_CLIENT_ID variable.")
        }
        return clientID
    }()

    /// Your organization's ArcGIS Runtime [license](https://developers.arcgis.com/arcgis-runtime/licensing/) key.
    ///
    /// - Note: this step is optional during development but required for deployment.
    ///         Licensing the app will remove the "Licensed for Developer Use Only"
    ///         watermark on the map view.
    static let licenseKey: String = {
        let licenseKey = "{{ ARCGIS_LICENSE_KEY }}"
        guard !licenseKey.isEmpty else {
            fatalError(".secrets must contain ARCGIS_LICENSE_KEY variable.")
        }
        return licenseKey
    }()
    
    /// The extension license key for sample viewer. Required for utility network samples.
    static let extensionLicenseKey: String = {
        let licenseKey = "{{ ARCGIS_EXTENSION_LICENSE_KEY }}"
        guard !licenseKey.isEmpty else {
            #if DEBUG
            return "fake_inconsequential_license_key"
            #else
            fatalError(".secrets must contain ARCGIS_EXTENSION_LICENSE_KEY variable.")
            #endif
        }
        return licenseKey
    }()
    
    /// The API key for sample viewer.
    static let apiKey: String = {
        let apiKey = "{{ ARCGIS_API_KEY }}"
        guard !apiKey.isEmpty else {
            fatalError(".secrets must contain ARCGIS_API_KEY variable.")
        }
        return apiKey
    }()
}
